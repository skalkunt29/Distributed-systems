# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import buyer_pb2 as buyer__pb2


class BuyerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create_buyer = channel.unary_unary(
                '/Buyer/create_buyer',
                request_serializer=buyer__pb2.BuyerUser.SerializeToString,
                response_deserializer=buyer__pb2.BuyerResponse.FromString,
                )
        self.login_buyer = channel.unary_unary(
                '/Buyer/login_buyer',
                request_serializer=buyer__pb2.BuyerUser.SerializeToString,
                response_deserializer=buyer__pb2.BuyerResponse.FromString,
                )
        self.logout_buyer = channel.unary_unary(
                '/Buyer/logout_buyer',
                request_serializer=buyer__pb2.BuyerUser.SerializeToString,
                response_deserializer=buyer__pb2.BuyerResponse.FromString,
                )
        self.add_cart = channel.unary_unary(
                '/Buyer/add_cart',
                request_serializer=buyer__pb2.CartItem.SerializeToString,
                response_deserializer=buyer__pb2.BuyerResponse.FromString,
                )
        self.remove_cart = channel.unary_unary(
                '/Buyer/remove_cart',
                request_serializer=buyer__pb2.CartItem.SerializeToString,
                response_deserializer=buyer__pb2.BuyerResponse.FromString,
                )
        self.clear_cart = channel.unary_unary(
                '/Buyer/clear_cart',
                request_serializer=buyer__pb2.BuyerUser.SerializeToString,
                response_deserializer=buyer__pb2.BuyerResponse.FromString,
                )
        self.display_cart = channel.unary_unary(
                '/Buyer/display_cart',
                request_serializer=buyer__pb2.BuyerUser.SerializeToString,
                response_deserializer=buyer__pb2.CartResponse.FromString,
                )
        self.add_purchase = channel.unary_unary(
                '/Buyer/add_purchase',
                request_serializer=buyer__pb2.CartItem.SerializeToString,
                response_deserializer=buyer__pb2.BuyerResponse.FromString,
                )
        self.get_purchase_history = channel.unary_unary(
                '/Buyer/get_purchase_history',
                request_serializer=buyer__pb2.BuyerUser.SerializeToString,
                response_deserializer=buyer__pb2.BuyerHistory.FromString,
                )
        self.get_seller_rating = channel.unary_unary(
                '/Buyer/get_seller_rating',
                request_serializer=buyer__pb2.BuyerUser.SerializeToString,
                response_deserializer=buyer__pb2.BuyerSellerRating.FromString,
                )
        self.check_buyer_login_status = channel.unary_unary(
                '/Buyer/check_buyer_login_status',
                request_serializer=buyer__pb2.BuyerUser.SerializeToString,
                response_deserializer=buyer__pb2.BuyerResponse.FromString,
                )
        self.search = channel.unary_unary(
                '/Buyer/search',
                request_serializer=buyer__pb2.BuyerSearchQuery.SerializeToString,
                response_deserializer=buyer__pb2.BuyerItemResponse.FromString,
                )
        self.remove_purchase_item = channel.unary_unary(
                '/Buyer/remove_purchase_item',
                request_serializer=buyer__pb2.CartItem.SerializeToString,
                response_deserializer=buyer__pb2.BuyerResponse.FromString,
                )


class BuyerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def create_buyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def login_buyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def logout_buyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_cart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def remove_cart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clear_cart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def display_cart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_purchase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_purchase_history(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_seller_rating(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def check_buyer_login_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def remove_purchase_item(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BuyerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create_buyer': grpc.unary_unary_rpc_method_handler(
                    servicer.create_buyer,
                    request_deserializer=buyer__pb2.BuyerUser.FromString,
                    response_serializer=buyer__pb2.BuyerResponse.SerializeToString,
            ),
            'login_buyer': grpc.unary_unary_rpc_method_handler(
                    servicer.login_buyer,
                    request_deserializer=buyer__pb2.BuyerUser.FromString,
                    response_serializer=buyer__pb2.BuyerResponse.SerializeToString,
            ),
            'logout_buyer': grpc.unary_unary_rpc_method_handler(
                    servicer.logout_buyer,
                    request_deserializer=buyer__pb2.BuyerUser.FromString,
                    response_serializer=buyer__pb2.BuyerResponse.SerializeToString,
            ),
            'add_cart': grpc.unary_unary_rpc_method_handler(
                    servicer.add_cart,
                    request_deserializer=buyer__pb2.CartItem.FromString,
                    response_serializer=buyer__pb2.BuyerResponse.SerializeToString,
            ),
            'remove_cart': grpc.unary_unary_rpc_method_handler(
                    servicer.remove_cart,
                    request_deserializer=buyer__pb2.CartItem.FromString,
                    response_serializer=buyer__pb2.BuyerResponse.SerializeToString,
            ),
            'clear_cart': grpc.unary_unary_rpc_method_handler(
                    servicer.clear_cart,
                    request_deserializer=buyer__pb2.BuyerUser.FromString,
                    response_serializer=buyer__pb2.BuyerResponse.SerializeToString,
            ),
            'display_cart': grpc.unary_unary_rpc_method_handler(
                    servicer.display_cart,
                    request_deserializer=buyer__pb2.BuyerUser.FromString,
                    response_serializer=buyer__pb2.CartResponse.SerializeToString,
            ),
            'add_purchase': grpc.unary_unary_rpc_method_handler(
                    servicer.add_purchase,
                    request_deserializer=buyer__pb2.CartItem.FromString,
                    response_serializer=buyer__pb2.BuyerResponse.SerializeToString,
            ),
            'get_purchase_history': grpc.unary_unary_rpc_method_handler(
                    servicer.get_purchase_history,
                    request_deserializer=buyer__pb2.BuyerUser.FromString,
                    response_serializer=buyer__pb2.BuyerHistory.SerializeToString,
            ),
            'get_seller_rating': grpc.unary_unary_rpc_method_handler(
                    servicer.get_seller_rating,
                    request_deserializer=buyer__pb2.BuyerUser.FromString,
                    response_serializer=buyer__pb2.BuyerSellerRating.SerializeToString,
            ),
            'check_buyer_login_status': grpc.unary_unary_rpc_method_handler(
                    servicer.check_buyer_login_status,
                    request_deserializer=buyer__pb2.BuyerUser.FromString,
                    response_serializer=buyer__pb2.BuyerResponse.SerializeToString,
            ),
            'search': grpc.unary_unary_rpc_method_handler(
                    servicer.search,
                    request_deserializer=buyer__pb2.BuyerSearchQuery.FromString,
                    response_serializer=buyer__pb2.BuyerItemResponse.SerializeToString,
            ),
            'remove_purchase_item': grpc.unary_unary_rpc_method_handler(
                    servicer.remove_purchase_item,
                    request_deserializer=buyer__pb2.CartItem.FromString,
                    response_serializer=buyer__pb2.BuyerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Buyer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Buyer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def create_buyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/create_buyer',
            buyer__pb2.BuyerUser.SerializeToString,
            buyer__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def login_buyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/login_buyer',
            buyer__pb2.BuyerUser.SerializeToString,
            buyer__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def logout_buyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/logout_buyer',
            buyer__pb2.BuyerUser.SerializeToString,
            buyer__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add_cart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/add_cart',
            buyer__pb2.CartItem.SerializeToString,
            buyer__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def remove_cart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/remove_cart',
            buyer__pb2.CartItem.SerializeToString,
            buyer__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def clear_cart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/clear_cart',
            buyer__pb2.BuyerUser.SerializeToString,
            buyer__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def display_cart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/display_cart',
            buyer__pb2.BuyerUser.SerializeToString,
            buyer__pb2.CartResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add_purchase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/add_purchase',
            buyer__pb2.CartItem.SerializeToString,
            buyer__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_purchase_history(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/get_purchase_history',
            buyer__pb2.BuyerUser.SerializeToString,
            buyer__pb2.BuyerHistory.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_seller_rating(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/get_seller_rating',
            buyer__pb2.BuyerUser.SerializeToString,
            buyer__pb2.BuyerSellerRating.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def check_buyer_login_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/check_buyer_login_status',
            buyer__pb2.BuyerUser.SerializeToString,
            buyer__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/search',
            buyer__pb2.BuyerSearchQuery.SerializeToString,
            buyer__pb2.BuyerItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def remove_purchase_item(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Buyer/remove_purchase_item',
            buyer__pb2.CartItem.SerializeToString,
            buyer__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
